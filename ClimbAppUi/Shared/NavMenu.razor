@using BlazorCLIMB.Model.BlazorCRUD.Model;
@using BlazorCLIMB.UI.Interfaces;
@using BlazorCLIMB.UI.Services;
@using Radzen;

@inject IAuthService authService
@inject NavigationManager NavigationManager

<style>
    .custom-menu {
        background-color: black; /* Color de fondo negro */
        border: 1px solid gray; /* Borde gris de 1 píxel */
      
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Sombra suave */
        padding: 10px; /* Espaciado interior */
        display: flex; /* Utilizar flexbox para alinear elementos horizontalmente */
        align-items: center; /* Alinear elementos verticalmente en el centro */
        justify-content: space-around; /* Espacio entre el logo y el menú */
        margin-bottom:20px;
    }

        
    .rz-menu:not(.rz-profile-menu) {
        background-color: black;
        display: flex;
        justify-content: flex-end; /* Alinear elementos a la derecha */
        gap: 10px; /* Espacio entre elementos del menú */
    }

        .rz-menu:not(.rz-profile-menu) .rz-menu-item {
            color: white; /* Color del texto del menú */
        }

    .avatar-button div {
        border-radius: 50%;
        width: 55px;
        height: 55px;
        border: 3px solid transparent; /* Ajusta el tamaño del borde si es necesario */
        background-image: linear-gradient(white, white), linear-gradient(to right, #feda75, #fa7e1e, #d62976, #962fbf, #4f5bd5);
        margin-left: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        overflow: hidden;
        background-origin: border-box; /* Esto asegura que el degradado cubra el borde */
        background-clip: content-box, border-box; /* Esto permite tener el borde con el degradado */
    }

        .avatar-button div img {
            border-radius: 50%;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    button.avatar-button {
        background-color: black;
        border: none;
    }

    .nav-item{
        background-color:black;
    }

    .sport {
        line-height: 0;
        color: #000000;
        border-top-width: 0px;
        border-bottom-width: 0px;
        border-left-width: 0px;
        border-right-width: 0px;
        border-top-style: solid;
        border-bottom-style: solid;
        border-left-style: solid;
        border-right-style: solid;
        width: 30%;
        aspect-ratio: auto 728 / 90;
        height: 20%;
        margin-right:5px;
    }

    .mountain {
        -webkit-font-smoothing: antialiased;
        -webkit-text-size-adjust: 100%;
        color: #111;
        x: 0px;
        y: 0px;
        box-sizing: border-box;
        font: inherit;
        margin: 0;
        padding: 0;
        overflow: hidden;
        display: block;
        transition: opacity .4s ease-in;
        opacity: 1;
    }

  
</style>

<div class="custom-menu">
    <a href="/climbingRouteList"><img src="images/logoClimb.png" alt="ClimbApp Logo" style="height: 2.75rem; border-radius:50%; margin-right:25px" class="logo" /></a>
@*     <img class="sport" src="https://tpc.googlesyndication.com/simgad/6746290795579018088" border="0" width="728" height="90"> *@
    <svg class="mountain" version="1.1" id="eu-ridgeline" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 3106.3 140" xml:space="preserve" data-v-ca0dc9d4=""><path fill="none" stroke="#FFFFFF" stroke-width="3" stroke-linecap="square" stroke-miterlimit="10" d="M2.3,134h110.1c5.4-1,10.3-8.9,12.3-13.6c2.6-6.1,7.1-16.8,7.8-17.1c14.7-6.1,27.9-15.2,38.8-26.8l9.1-3.6
		l6.7-6.1l6.1,0.6l11-10.4l4.9-3.1l8.6-3l9.8-7.3h18.3l17.7,14l12.2-5.5l7.9-2.5l7.3-1.2l9.8,1.8l7.3-1.8l12.8-4.9h6.1l6.1-3.1
		l10.4,2.4l9.2,0.6l7.3-3.1l28.1,22l33.6,24.4l18.3,6.7l13.4,8.6l21.4,6.1l12.8,8.6l9.8,9.2l5.5,6.3l-5.5-6.3l5.7-2.3l10.8-2.6
		l11.6-2.4l5.3-3l6.1-6.7l6.1,6.1l4.3-3.7l3.7-4.3l5.5-6.1l6.1-4.3l12.2,0.6l6.1,6.1l4.3,3.1l6.1-3.1l7.9-3.7l4.9-3.7
		c0,0,11-0.6,13.4,0c2.5,0.6,12.8,4.3,12.8,4.3l7.3,4.3l12.8,6.1l11,2.4l14.7,6.1l18.3,1.2l17.7,2.4h20.8l18.3-2.4l7.9-4.3l17.7-3.1
		l15.9-7.3h11.6l15.9-3.7l8.5-4.9h20.8l9.8-9.8l11-1.8l14.7-8.5l11.6-3.7l7.3,5.5l10.4,10.4l9.8-6.7l11.6-4.3l4.9-3.1l6.7,6.1
		l7.9,1.8l16.5-1.9l10.4-3l12.2-3l9.2,4.3l6.1,3l4.9-1.8l9.2-8.6h20.8l11.6,3.1l5.5,8.5h9.8l3.6,4.9h6.1l4.7-4.9h1.4l3.7,6.1l5.5,3.1
		l9.2-1.8l5.5-4.3l4.2-4.3l6.1,3.1l10.4,7.3l14.1,1.2l21,2.6c0,0,15.4,22.4,49.3,37.1l1885,0.1" class="ridgeline-path"></path></svg>
    
    <RadzenMenu Click="OnParentClicked">
        @if (userId != 0)
        {
            <RadzenMenuItem Icon="fingerprint">
                <RadzenMenuItem Text="Lista de Vías" Path="/climbingRouteList" Icon="android"></RadzenMenuItem>
                <RadzenMenuItem Text="Encadenadas" Path="/userRoutes/userId" Icon="add_circle"></RadzenMenuItem>
            </RadzenMenuItem>
        }
        <RadzenMenuItem Path="/gallery" Icon="photo"></RadzenMenuItem>
        <RadzenMenuItem Path="/videos" Icon="videocam"></RadzenMenuItem>
        
        
            <RadzenMenuItem Path="/" Icon="home"></RadzenMenuItem>
    
        @if(userId != 0){

            <li class="nav-item">
                <button class="avatar-button" @onclick="ToggleAvatarMenu">
                    <div>
                        <img src="@GetImageAsBase64()" alt="User Avatar" />
                    </div>
                </button>
            </li>


        }else{
            <RadzenMenuItem Path="/Login" Icon="login"></RadzenMenuItem>
        }
        @if (showAvatarMenu)
        {
            <div class="avatar-menu" style="background-color: #365664; padding: 10px; border-radius: 5px; margin-top:40px;">
     <!-- Contenido del menú desplegable del avatar aquí -->
     <div class="d-flex flex-column">
         <p style="font-size: 11px; margin-bottom: 10px; font-weight: bold; color: white !important;">Nombre: @user.Name</p>
         <p style="font-size: 11px; margin-bottom: 10px; font-weight: bold; color: white !important;">Email: @user.Email</p>
         <p style="font-size: 11px; margin-bottom: 10px; font-weight: bold; color: white !important;">Role de Usuario: @user.Role</p>
                    <RadzenButton  Size="ButtonSize.Small" Click="AddClimbingRoute" Text="Área Personal" ButtonStyle="ButtonStyle.Dark" />
                    <RadzenButton Size="ButtonSize.Small" Click="LoginGo" Text="LogOut" ButtonStyle="ButtonStyle.Dark" />

     </div>
</div>

        }
    </RadzenMenu>
</div>


<EventConsole/>

@code {
    private User user;
    EventConsole console = new EventConsole();
    int userId = UserSession.UserId;
    private bool showAvatarMenu = false;
    private byte[] base64Image;


    protected override async Task OnInitializedAsync()
    {
        if (userId != 0)
        {
            user = await authService.GetUserById(userId);
            base64Image = user.Img;
        }
        StateHasChanged();
    }

    

    private string GetImageAsBase64()
    {
        if (user?.Img != null)
        {
            return $"data:image/png;base64,{Convert.ToBase64String(user.Img)}";
        }
        else
        {
            return "_content/ClimbAppUi/images/ondra.jpg";
        }
    }
   

    private void ToggleAvatarMenu()
    {
        showAvatarMenu = !showAvatarMenu;
    }

    private void LoginGo()
    {
        NavigationManager.NavigateTo("/Login");
    }

    private void AddClimbingRoute()
    {
        NavigationManager.NavigateTo("/personalArea");
    }

    void OnParentClicked(MenuItemEventArgs args)
    {
        console.Log($"{args.Text} clicked from parent");
    }

    public class EventConsole
    {
        private List<string> logMessages = new List<string>();

        public void Log(string message)
        {
            logMessages.Add(message);
        }

        public IEnumerable<string> GetLog()
        {
            return logMessages;
        }
    }

}



