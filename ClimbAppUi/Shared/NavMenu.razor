@using BlazorCLIMB.Model.BlazorCRUD.Model;
@using BlazorCLIMB.UI.Interfaces;
@using BlazorCLIMB.UI.Services;
@using Radzen
@inject IAuthService authService
@inject NavigationManager NavigationManager

<style>
    .custom-menu {
        background-color: black; /* Color de fondo negro */
        border: 1px solid gray; /* Borde gris de 1 píxel */
      
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Sombra suave */
        padding: 10px; /* Espaciado interior */
        display: flex; /* Utilizar flexbox para alinear elementos horizontalmente */
        align-items: center; /* Alinear elementos verticalmente en el centro */
        justify-content: space-around; /* Espacio entre el logo y el menú */
        margin-bottom:20px;
    }

        
    .rz-menu:not(.rz-profile-menu) {
        background-color: black;
        display: flex;
        justify-content: flex-end; /* Alinear elementos a la derecha */
        gap: 10px; /* Espacio entre elementos del menú */
    }

        .rz-menu:not(.rz-profile-menu) .rz-menu-item {
            color: white; /* Color del texto del menú */
        }

    .avatar-button {
      
        background-color: black;
      border: none;
    }

    .sport {
        line-height: 0;
        color: #000000;
        border-top-width: 0px;
        border-bottom-width: 0px;
        border-left-width: 0px;
        border-right-width: 0px;
        border-top-style: solid;
        border-bottom-style: solid;
        border-left-style: solid;
        border-right-style: solid;
        width: 30%;
        aspect-ratio: auto 728 / 90;
        height: 20%;
        margin-right:50px;
    }

      
</style>

<div class="custom-menu">
    <a href="/climbingRouteList"><img src="images/logoClimb.png" alt="ClimbApp Logo" style="height: 2.75rem; border-radius:50%; margin-right:15px" class="logo" /></a>
    <img class="sport" src="https://tpc.googlesyndication.com/simgad/6746290795579018088" border="0" width="728" height="90">

    
    <RadzenMenu Click="OnParentClicked">
        @if (userId != 0)
        {
            <RadzenMenuItem Text="Ascensiones" Icon="add_circle">
                <RadzenMenuItem Text="Añadir Via" Path="/climbingRouteDetails" Icon="add_circle"></RadzenMenuItem>
                <RadzenMenuItem Text="Vías encadenadas" Path="/climbingRouteList" Icon="list"></RadzenMenuItem>
            </RadzenMenuItem>
        }
        <RadzenMenuItem Text="Noticias" Icon="book">
            <RadzenMenuItem Text="España" Path="noticias/espana" Icon="flag"></RadzenMenuItem>
            <RadzenMenuItem Text="Internacional" Path="noticias/internacional" Icon="public"></RadzenMenuItem>
        </RadzenMenuItem>
        <RadzenMenuItem Text="Galería" Path="/gallery" Icon="photo"></RadzenMenuItem>
        <RadzenMenuItem Text="Videos" Path="/videos" Icon="videocam"></RadzenMenuItem>
        @if (userId != 0)
        {
            <RadzenMenuItem Text="Foro" Path="foro" Icon="forum"></RadzenMenuItem>
        }
        @if(userId != 0){

            <li class="nav-item">
                <button class="avatar-button" @onclick="ToggleAvatarMenu">
                    <BlazorCLIMB.UI.Pages.Shared.AvatarNav />
                </button>
            </li>

        }else{
            <RadzenMenuItem Text="Login" Path="/Login" Icon="login"></RadzenMenuItem>
        }
        @if (showAvatarMenu)
        {
            <div class="avatar-menu" style="background-color: #f0f0f0; padding: 10px; border-radius: 5px; margin-top:20px;">
                <!-- Contenido del menú desplegable del avatar aquí -->
                <div class="d-flex flex-column">
                    <p style="font-size: 11px; margin-bottom: 10px; font-weight: bold;">Nombre: @user.Name</p>
                    <p style="font-size: 11px; margin-bottom: 10px; font-weight: bold;">Email: @user.Email</p>
                    <p style="font-size: 11px; margin-bottom: 10px; font-weight: bold;">Role de Usuario: @user.Role</p>
                    <RadzenButton Size="ButtonSize.Small"  Variant="Variant.Outlined" Click="AddClimbingRoute" Text="Área Personal" ButtonStyle="ButtonStyle.Dark"/>
                    <RadzenButton Size="ButtonSize.Small" Variant="Variant.Outlined" Click="LoginGo" Text="LogOut" ButtonStyle="ButtonStyle.Dark"/>
                </div>
            </div>
        }
    </RadzenMenu>
</div>


<EventConsole/>

@code {
    private User user;
    EventConsole console = new EventConsole();
    int userId = UserSession.UserId;
    private bool showAvatarMenu = false;

    protected override async Task OnInitializedAsync()
    {
        if (userId != 0)
        {
            user = await authService.GetUserById(userId);
        }
        StateHasChanged();
    }

    private void ToggleAvatarMenu()
    {
        showAvatarMenu = !showAvatarMenu;
    }

    private void LoginGo()
    {
        NavigationManager.NavigateTo("/Login");
    }

    private void AddClimbingRoute()
    {
        NavigationManager.NavigateTo("/climbingRouteList");
    }

    void OnParentClicked(MenuItemEventArgs args)
    {
        console.Log($"{args.Text} clicked from parent");
    }

    public class EventConsole
    {
        private List<string> logMessages = new List<string>();

        public void Log(string message)
        {
            logMessages.Add(message);
        }

        public IEnumerable<string> GetLog()
        {
            return logMessages;
        }
    }

}



