@using Radzen
<style>
    .custom-menu {
        background-color: black; /* Color de fondo negro */
        border: 1px solid gray; /* Borde gris de 1 píxel */
        border-radius: 10px; /* Bordes redondeados */
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Sombra suave */
        padding: 10px; /* Espaciado interior */
        display: flex; /* Utilizar flexbox para alinear elementos horizontalmente */
        align-items: center; /* Alinear elementos verticalmente en el centro */
        justify-content: space-around; /* Espacio entre el logo y el menú */
        margin-bottom:20px;
    }

        .custom-menu img {
      
            transition: transform 0.2s ease; /* Agregar una transición suave */
        }

        .custom-menu:hover img {
            transform: translateY(5px); /* Mover el logo hacia abajo en el hover */
        }

    .rz-menu:not(.rz-profile-menu) {
        background-color: black;
        display: flex;
        justify-content: flex-end; /* Alinear elementos a la derecha */
        gap: 10px; /* Espacio entre elementos del menú */
    }

        .rz-menu:not(.rz-profile-menu) .rz-menu-item {
            color: white; /* Color del texto del menú */
        }

</style>

<div class="custom-menu">
    <img src="images/logoClimb.png" alt="ClimbApp Logo" style="height: 2.75rem; border-radius:50%; margin-right:15%" class="logo" />
    <RadzenMenu Click="OnParentClicked">
        @if (userId != 0)
        {
            <RadzenMenuItem Text="Ascensiones" Icon="add_circle">
                <RadzenMenuItem Text="Añadir Via" Path="/climbingRouteDetails" Icon="add_circle"></RadzenMenuItem>
                <RadzenMenuItem Text="Vías encadenadas" Path="/climbingRouteList" Icon="list"></RadzenMenuItem>
            </RadzenMenuItem>
        }
        <RadzenMenuItem Text="Noticias" Icon="book">
            <RadzenMenuItem Text="España" Path="noticias/espana" Icon="flag"></RadzenMenuItem>
            <RadzenMenuItem Text="Internacional" Path="noticias/internacional" Icon="public"></RadzenMenuItem>
        </RadzenMenuItem>
        <RadzenMenuItem Text="Galería" Path="galeria" Icon="photo"></RadzenMenuItem>
        <RadzenMenuItem Text="Videos" Path="videos" Icon="videocam"></RadzenMenuItem>
        @if (userId != 0)
        {
            <RadzenMenuItem Text="Foro" Path="foro" Icon="forum"></RadzenMenuItem>
        }
        @if(userId != 0){
           
           <BlazorCLIMB.UI.Pages.Shared.AvatarNav></BlazorCLIMB.UI.Pages.Shared.AvatarNav>

        }else{
            <RadzenMenuItem Text="Login" Path="/Login" Icon="login"></RadzenMenuItem>
        }
    </RadzenMenu>
</div>


<EventConsole/>

@code {
    EventConsole console = new EventConsole();
    void OnParentClicked(MenuItemEventArgs args)
    {
        console.Log($"{args.Text} clicked from parent");
    }

    public class EventConsole
    {
        private List<string> logMessages = new List<string>();

        public void Log(string message)
        {
            logMessages.Add(message);
        }

        public IEnumerable<string> GetLog()
        {
            return logMessages;
        }
    }
    private int userId;

    protected override void OnInitialized()
    {
        userId = UserSession.UserId; // Asumiendo que UserSession es tu clase para manejar la sesión
    }
}



